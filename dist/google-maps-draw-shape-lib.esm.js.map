{"version":3,"file":"google-maps-draw-shape-lib.esm.js","sources":["../src/MapDrawShape/Overlays/CustomOverlayView.js","../src/MapDrawShape/Map/MapHelper.js","../src/MapDrawShape/Geometry/JstsHelper.js","../src/MapDrawShape/MapDrawShapeManager.js"],"sourcesContent":["export default class CustomOverlayView {\n  /**\n   * @param {string} content String with the inner HTML of the overlay\n   * @param {google.maps.LatLng} position Google LatLng object with the position of the overlay on the map\n   * @param {Function} callback Funcion to be called when click in the overlay\n   */\n  constructor(content, position, callback) {\n    this.content = content;\n    this.position = position;\n    this.callback = callback;\n\n    // Typescript ReferenceError: google is not defined\n    // It is not possible to directly extend a google.maps.* class since it actually isn't available\n    this.extend(CustomOverlayView, google.maps.OverlayView);\n  }\n\n  onAdd = () => {\n    this.div = document.createElement('div');\n    this.div.style.cssText = 'position: absolute; transform: translate(-50%, -50%);';\n    this.div.innerHTML = this.content;\n\n    if (this.callback) {\n      google.maps.event.addDomListener(this.div, 'click', this.callback);\n    }\n\n    this.getPanes().floatPane.appendChild(this.div);\n  };\n\n  onRemove = () => {\n    if (this.div) {\n      google.maps.event.clearInstanceListeners(this.div);\n\n      this.div.parentNode.removeChild(this.div);\n      delete this.div;\n    }\n  };\n\n  close = () => {\n    this.setMap(null);\n  };\n\n  draw = () => {\n    const position = this.position;\n\n    const projection = this.getProjection();\n\n    if (!position || !projection) {\n      return;\n    }\n\n    const point = projection.fromLatLngToDivPixel(position);\n\n    if (this.div) {\n      this.div.style.top = point.y + 'px';\n      this.div.style.left = point.x + 'px';\n    }\n  };\n\n  show = (map) => {\n    this.setMap(map);\n\n    this.draw();\n  };\n\n  remove = () => {\n    this.close();\n  };\n\n  extend = (type1, type2) => {\n    for (let property in type2.prototype) {\n      type1.prototype[property] = type2.prototype[property];\n    }\n  };\n}\n","export default class MapFunctions {\n  /**\n   * @param {google.maps.Map} map Google Maps JavaScript API instance\n   * @returns {number} Current zoom level of the map\n   */\n  static getZoom = (map) => {\n    return map.getZoom();\n  };\n\n  /**\n   * @param {google.maps.Map} map Google Maps JavaScript API instance\n   * @returns {any} Object with NW and SE bounds of the map\n   */\n  static getBounds = (map) => {\n    const bounds = map.getBounds();\n\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n\n    return {\n      nw: { lat: ne.lat(), lng: sw.lng() },\n      se: { lat: sw.lat(), lng: ne.lng() }\n    };\n  };\n\n  /**\n   * @param {google.maps.Map} map Google Maps JavaScript API instance\n   * @param {any} point Object with clientX and clientY screen coordinates\n   * @returns {google.maps.LatLng} Object with Lat and Lng\n   */\n  static pointToLatLng = (map, point) => {\n    const clientRect = map.getDiv().getBoundingClientRect();\n\n    const clientX = point.clientX - clientRect.left;\n    const clientY = point.clientY - clientRect.top;\n\n    const projection = map.getProjection();\n    const bounds = map.getBounds();\n\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n\n    const topRight = projection.fromLatLngToPoint(ne);\n    const bottomLeft = projection.fromLatLngToPoint(sw);\n\n    const zoom = MapFunctions.getZoom(map);\n    const scale = Math.pow(2, zoom);\n\n    return projection.fromPointToLatLng(new google.maps.Point(clientX / scale + bottomLeft.x, clientY / scale + topRight.y));\n  };\n\n  /**\n   * @param {google.maps.Map} map Google Maps JavaScript API instance\n   * @param {boolean} freeze Flag indicating whether it should freeze the map\n   */\n  static freezeMap = (map, freeze) => {\n    map.setOptions({\n      draggable: !freeze,\n      scrollwheel: !freeze,\n      draggableCursor: freeze ? 'pointer' : null,\n      disableDoubleClickZoom: freeze\n    });\n  };\n\n  /**\n   * @param {google.maps.Map} map Google Maps JavaScript API instance\n   * @param {boolean} enable Flag indicating whether it should enable crossair cursor over the map\n   */\n  static enableCrossair = (map, enable) => {\n    map.setOptions({\n      draggableCursor: enable ? 'crosshair' : null,\n      disableDoubleClickZoom: enable\n    });\n  };\n}\n","import * as jsts from 'jsts/dist/jsts';\n\nexport default class JstsHelper {\n  /**\n   * @param {object[]} shape Array of objects that contain lat lng values\n   * @param {bool} validate Flag indicating whether it should validate the shape\n   * @returns {object[]} Array of that contains polygons that are Lists of google.maps.LatLng objects\n   */\n  static processShape = (shape, validate) => {\n    let polygons = [];\n\n    if (shape?.length > 2) {\n      let shapePolygons = [];\n\n      let polygon = [];\n\n      let firstCoordinate = null;\n\n      for (let i = 0; i < shape.length; i++) {\n        if (!firstCoordinate) {\n          firstCoordinate = shape[i];\n\n          polygon = [];\n          polygon.push(validate ? new jsts.geom.Coordinate(shape[i].lng, shape[i].lat) : new google.maps.LatLng(shape[i].lat, shape[i].lng));\n\n          continue;\n        }\n\n        polygon.push(validate ? new jsts.geom.Coordinate(shape[i].lng, shape[i].lat) : new google.maps.LatLng(shape[i].lat, shape[i].lng));\n\n        if (firstCoordinate.lat === shape[i].lat && firstCoordinate.lng === shape[i].lng) {\n          if (polygon.length > 3) {\n            shapePolygons.push(polygon);\n          }\n\n          firstCoordinate = null;\n        } else {\n          if (i === shape.length - 1) {\n            polygon.push(polygon[0]);\n\n            if (polygon.length > 3) {\n              shapePolygons.push(polygon);\n            }\n          }\n        }\n      }\n\n      if (!validate) {\n        polygons = shapePolygons;\n      } else {\n        if (shapePolygons.length > 0) {\n          const geometryFactory = new jsts.geom.GeometryFactory();\n\n          const jstsPolygons = shapePolygons.map((item) => {\n            const shell = geometryFactory.createLinearRing(item);\n            return geometryFactory.createPolygon(shell);\n          });\n\n          const jstsPolygon = jstsPolygons.length > 1 ? geometryFactory.createMultiPolygon(jstsPolygons) : jstsPolygons[0];\n\n          const validPolygon = this.#validateGeometry(jstsPolygon);\n\n          if (validPolygon && validPolygon.getCoordinates().length) {\n            polygons = this.#convertFromJstsGeometry(validPolygon);\n          }\n        }\n      }\n    }\n\n    return polygons;\n  };\n\n  /**\n   * @param {google.maps.LatLng[]} path Array of google.maps.LatLng objects\n   * @param {number} simplifyZoom Zoom level to take into account when simplifying the shape\n   * @returns {object[]} Array of that contains polygons that are Lists of google.maps.LatLng objects\n   */\n  static processPolygon = (path, simplifyZoom) => {\n    let polygons = [];\n\n    if (path?.length > 2) {\n      const coordinates = path.map((item) => {\n        return new jsts.geom.Coordinate(item.lng(), item.lat());\n      });\n\n      if (coordinates.length > 0) {\n        coordinates.push(coordinates[0]);\n      }\n\n      const geometryFactory = new jsts.geom.GeometryFactory();\n\n      const shell = geometryFactory.createLinearRing(coordinates);\n\n      let jstsPolygon = geometryFactory.createPolygon(shell);\n\n      if (simplifyZoom) {\n        jstsPolygon = this.#simplifyPolygon(jstsPolygon, simplifyZoom);\n      }\n\n      const validPolygon = this.#validateGeometry(jstsPolygon);\n\n      if (validPolygon && validPolygon.getCoordinates().length) {\n        polygons = this.#convertFromJstsGeometry(validPolygon);\n      }\n    }\n\n    return polygons;\n  };\n\n  static #simplifyPolygon = (polygon, zoom) => {\n    let tolerance = 0.1;\n\n    switch (zoom) {\n      case 7:\n      case 8:\n      case 9: {\n        tolerance = 0.01;\n        break;\n      }\n      case 10:\n      case 11:\n      case 12:\n      case 13: {\n        tolerance = 0.001;\n        break;\n      }\n      case 14:\n      case 15:\n      case 16:\n      case 17: {\n        tolerance = 0.0001;\n        break;\n      }\n      case 18:\n      case 19:\n      case 20:\n      case 21:\n      case 22: {\n        tolerance = 0.00001;\n        break;\n      }\n      default:\n        tolerance = 0.1;\n    }\n\n    return jsts.simplify.TopologyPreservingSimplifier.simplify(polygon, tolerance);\n  };\n\n  static #convertFromJstsGeometry = (geom) => {\n    let polygons = [];\n\n    // Sets shape on clockwise order\n    geom.normalize();\n\n    if (geom instanceof jsts.geom.Polygon) {\n      const polygon = this.#convertFromJstsCoordinates(geom.getCoordinates());\n\n      polygons.push(polygon);\n    }\n\n    if (geom instanceof jsts.geom.MultiPolygon) {\n      for (let n = geom.getNumGeometries(); n > 0; n--) {\n        const polygon = this.#convertFromJstsCoordinates(geom.getGeometryN(n - 1).getCoordinates());\n\n        polygons.push(polygon);\n      }\n    }\n\n    return polygons;\n  };\n\n  static #convertFromJstsCoordinates = (coordinates) => {\n    let path = [];\n\n    if (coordinates) {\n      let lastCoordinate = null;\n\n      for (let i = 0; i < coordinates.length; i++) {\n        if (!lastCoordinate || !(lastCoordinate.x === coordinates[i].x && lastCoordinate.y === coordinates[i].y)) {\n          lastCoordinate = coordinates[i];\n\n          path.push(new google.maps.LatLng(lastCoordinate.y, lastCoordinate.x));\n        }\n      }\n    }\n\n    return path;\n  };\n\n  static #validateGeometry = (geom) => {\n    if (geom instanceof jsts.geom.Polygon) {\n      if (geom.isValid()) {\n        return geom;\n      }\n\n      let polygonizer = new jsts.operation.polygonize.Polygonizer();\n\n      this.#addPolygon(geom, polygonizer);\n\n      return this.#toPolygonGeometry(polygonizer.getPolygons());\n    } else if (geom instanceof jsts.geom.MultiPolygon) {\n      if (geom.isValid()) {\n        return geom;\n      }\n\n      let polygonizer = new jsts.operation.polygonize.Polygonizer();\n\n      for (let n = geom.getNumGeometries(); n > 0; n--) {\n        this.#addPolygon(geom.getGeometryN(n - 1), polygonizer);\n      }\n\n      return this.#toPolygonGeometry(polygonizer.getPolygons());\n    } else {\n      return geom;\n    }\n  };\n\n  static #addPolygon = (polygon, polygonizer) => {\n    this.#addLineString(polygon.getExteriorRing(), polygonizer);\n\n    for (let n = polygon.getNumInteriorRing(); n > 0; n--) {\n      this.#addLineString(polygon.getInteriorRingN(n), polygonizer);\n    }\n  };\n\n  static #addLineString = (lineString, polygonizer) => {\n    if (lineString instanceof jsts.geom.LinearRing) {\n      lineString = lineString.getFactory().createLineString(lineString.getCoordinateSequence());\n    }\n\n    let point = lineString.getFactory().createPoint(lineString.getCoordinateN(0));\n    let toAdd = lineString.union(point);\n\n    polygonizer.add(toAdd);\n  };\n\n  static #toPolygonGeometry = (polygons) => {\n    switch (polygons.size()) {\n      case 0:\n        return null;\n      case 1:\n        return polygons.iterator().next();\n      default:\n        let iter = polygons.iterator();\n        let ret = iter.next();\n\n        while (iter.hasNext()) {\n          ret = ret.symDifference(iter.next());\n        }\n\n        return ret;\n    }\n  };\n}\n","import CustomOverlayView from './Overlays/CustomOverlayView';\nimport MapFunctions from './Map/MapHelper';\nimport JstsHelper from './Geometry/JstsHelper';\n\nexport default class MapDrawShapeManager {\n  /**\n   * @param {google.maps.Map} map Google Maps JavaScript API instance\n   * @param {Function} callback Callback function that will be called when user draws or clears the draw\n   * @param {boolean} drawingMode Flag indicating whether it should set Drawing Mode enabled\n   * @param {boolean} drawFreeHandMode Flag indicating whether it should set Draw Free Hand Mode enabled\n   * @param {object} polygonOptions Object containing the google polygon options to be used when drawing\n   * @param {string} initialPointInnerHtml String with the inner HTML of the draw initial point overlay\n   * @param {string} deletePointInnerHtml String with the inner HTML of the draw delete point overlay\n   */\n  constructor(\n    map,\n    callback,\n    drawingMode,\n    drawFreeHandMode,\n    polygonOptions,\n    initialPointInnerHtml,\n    deletePointInnerHtml,\n    onPlotCallback\n  ) {\n    this.map = map;\n\n    this.callback = callback;\n\n    this.drawFreeHandMode = drawFreeHandMode;\n\n    this.polygonOptions = polygonOptions;\n\n    this.initialPointInnerHtml = initialPointInnerHtml;\n    this.deletePointInnerHtml = deletePointInnerHtml;\n\n    this.initialDrawPoint = null;\n\n    this.startedDrawing = false;\n    this.startedDrawingFreeHand = false;\n\n    this.drawnPolylineDraft = null;\n    this.drawnPolygonDraft = null;\n\n    this.drawnShape = null;\n    this.deleteDrawnShape = null;\n    this.onPlotCallback = onPlotCallback;\n    this.setDrawingMode(drawingMode);\n  }\n\n  /**\n   * It draws a shape on the map using the provided shape\n   * @param {object[]} initialShape Array of objects that contain lat lng values\n   */\n  initDrawnShape = (initialShape) => {\n    if (initialShape?.length > 0 && !this.drawnShape) {\n      const polygons = JstsHelper.processShape(initialShape);\n\n      if (polygons.length > 0) {\n        this.drawnShape = [];\n\n        polygons.forEach((p) => {\n          this.drawnShape.push(\n            new google.maps.Polygon({ path: p, ...this.polygonOptions })\n          );\n        });\n\n        this.#setDeleteDrawPoint();\n      }\n    }\n  };\n\n  /**\n   * It resets the shape drawn on the map\n   */\n  resetDrawnShape = () => {\n    if (this.drawnShape) this.drawnShape.forEach((p) => p.setMap(null));\n    if (this.deleteDrawnShape) this.deleteDrawnShape.remove();\n\n    this.drawnShape = null;\n    this.deleteDrawnShape = null;\n  };\n\n  /**\n   * It sets the drawing mode to free hand, when enabled user should drag to draw instead of click\n   * @param {boolean} enabled Flag indicating whether it should set Draw Free Hand Mode enabled\n   */\n  setDrawFreeHandMode = (enabled) => {\n    if (!this.startedDrawing && !this.startedDrawingFreeHand) {\n      this.drawFreeHandMode = enabled;\n    }\n  };\n\n  /**\n   * It sets the map in drawing mode, when enabled user can star drawing\n   * @param {boolean} enabled Flag indicating whether it should set Drawing Mode enabled\n   */\n  setDrawingMode = (enabled) => {\n    if (enabled) {\n      if (this.drawnShape) this.drawnShape.forEach((p) => p.setMap(null));\n      if (this.deleteDrawnShape) this.deleteDrawnShape.remove();\n\n      if (this.drawFreeHandMode) {\n        this.#initDrawFreeHand();\n      } else {\n        this.#initDraw();\n      }\n    } else {\n      if (this.initialDrawPoint) this.initialDrawPoint.remove();\n      this.initialDrawPoint = null;\n\n      if (this.drawFreeHandMode) {\n        if (this.startedDrawingFreeHand) {\n          this.startedDrawingFreeHand = false;\n\n          MapFunctions.freezeMap(this.map, false);\n\n          if (this.drawnShape)\n            this.drawnShape.forEach((p) => p.setMap(this.map));\n          if (this.deleteDrawnShape) this.deleteDrawnShape.show(this.map);\n\n          this.#clearDrawFreeHandListeners();\n        }\n      } else {\n        if (this.startedDrawing) {\n          this.startedDrawing = false;\n\n          MapFunctions.enableCrossair(this.map, false);\n\n          if (this.drawnPolylineDraft) this.drawnPolylineDraft.setMap(null);\n          if (this.drawnPolygonDraft) this.drawnPolygonDraft.setMap(null);\n\n          this.drawnPolylineDraft = null;\n          this.drawnPolygonDraft = null;\n\n          if (this.drawnShape)\n            this.drawnShape.forEach((p) => p.setMap(this.map));\n          if (this.deleteDrawnShape) this.deleteDrawnShape.show(this.map);\n\n          this.#clearDrawListeners();\n        }\n      }\n    }\n  };\n\n  #setInitialDrawPoint = (point, callback) => {\n    this.initialDrawPoint = new CustomOverlayView(\n      this.initialPointInnerHtml,\n      point,\n      callback\n    );\n\n    this.initialDrawPoint.show(this.map);\n  };\n\n  #setDeleteDrawPoint = () => {\n    this.deleteDrawnShape = new CustomOverlayView(\n      this.deletePointInnerHtml,\n      this.#getDrawnShapeHighestPoint(),\n      () => {\n        if (this.drawnShape) this.drawnShape.forEach((p) => p.setMap(null));\n        if (this.deleteDrawnShape) this.deleteDrawnShape.remove();\n\n        this.drawnShape = null;\n        this.deleteDrawnShape = null;\n\n        this.callback([]);\n      }\n    );\n\n    if (!this.startedDrawing && !this.startedDrawingFreeHand) {\n      this.drawnShape.forEach((p) => p.setMap(this.map));\n      this.deleteDrawnShape.show(this.map);\n    }\n  };\n\n  #getDrawnShapeHighestPoint = () => {\n    let highestPoint = null;\n    let maxLat = 0;\n\n    this.drawnShape.forEach((polygon) => {\n      polygon\n        .getPath()\n        .getArray()\n        .forEach((point) => {\n          const lat = point.lat();\n\n          if (lat > maxLat) {\n            maxLat = lat;\n            highestPoint = point;\n          }\n        });\n    });\n\n    return highestPoint;\n  };\n\n  #initDraw = () => {\n    if (!this.startedDrawing) {\n      this.startedDrawing = true;\n\n      MapFunctions.enableCrossair(this.map, true);\n\n      this.#draw();\n    }\n  };\n\n  #draw = () => {\n    this.drawnPolylineDraft = new google.maps.Polyline({\n      map: this.map,\n      ...this.polygonOptions,\n    });\n    this.drawnPolygonDraft = new google.maps.Polygon({\n      map: this.map,\n      ...this.polygonOptions,\n      strokeOpacity: 0,\n    });\n\n    google.maps.event.addDomListener(this.map.getDiv(), 'click', (e) => {\n      const latLng = MapFunctions.pointToLatLng(this.map, e);\n\n      if (!this.initialDrawPoint) {\n        this.#setInitialDrawPoint(latLng, () => {\n          polylinePath.removeAt(polylinePath.length - 1);\n\n          this.#drawComplete();\n        });\n      }\n\n      const polylinePath = this.drawnPolylineDraft.getPath();\n\n      if (polylinePath.length > 0) {\n        polylinePath.removeAt(polylinePath.length - 1);\n      }\n\n      polylinePath.push(latLng);\n      polylinePath.push(latLng);\n\n      this.drawnPolygonDraft.setPath(polylinePath);\n      const lat = latLng.lat();\n      const lng = latLng.lng();\n      this.onPlotCallback({ lng, lat });\n    });\n\n    google.maps.event.addDomListener(this.map.getDiv(), 'mousemove', (e) => {\n      const polylinePath = this.drawnPolylineDraft.getPath();\n\n      if (polylinePath.length > 0) {\n        const latLng = MapFunctions.pointToLatLng(this.map, e);\n        polylinePath.setAt(polylinePath.length - 1, latLng);\n      }\n    });\n\n    google.maps.event.addListenerOnce(this.map, 'dblclick', () => {\n      setTimeout(() => {\n        this.#drawComplete();\n      }, 1);\n    });\n  };\n\n  #drawComplete = () => {\n    this.#clearDrawListeners();\n\n    this.startedDrawing = false;\n\n    MapFunctions.enableCrossair(this.map, false);\n\n    if (this.initialDrawPoint) this.initialDrawPoint.remove();\n    this.initialDrawPoint = null;\n\n    this.drawnPolylineDraft.setMap(null);\n    this.drawnPolygonDraft.setMap(null);\n\n    const polygons = JstsHelper.processPolygon(\n      this.drawnPolygonDraft.getPath().getArray()\n    );\n\n    if (polygons.length > 0) {\n      this.drawnShape = [];\n\n      let shape = [];\n\n      polygons.forEach((p) => {\n        this.drawnShape.push(\n          new google.maps.Polygon({ path: p, ...this.polygonOptions })\n        );\n\n        shape = shape.concat(\n          p.map((item) => {\n            return { lat: item.lat(), lng: item.lng() };\n          })\n        );\n      });\n\n      this.#setDeleteDrawPoint();\n\n      this.callback(shape);\n    } else {\n      this.#initDraw();\n    }\n  };\n\n  #clearDrawListeners = () => {\n    google.maps.event.clearListeners(this.map.getDiv(), 'click');\n    google.maps.event.clearListeners(this.map.getDiv(), 'mousemove');\n    google.maps.event.clearListeners(this.map, 'dblclick');\n  };\n\n  #initDrawFreeHand = () => {\n    if (!this.startedDrawingFreeHand) {\n      this.startedDrawingFreeHand = true;\n\n      MapFunctions.freezeMap(this.map, true);\n\n      this.#drawFreeHand();\n    }\n  };\n\n  #drawFreeHand = () => {\n    this.drawnPolylineDraft = new google.maps.Polyline({\n      map: this.map,\n      ...this.polygonOptions,\n    });\n\n    google.maps.event.addListenerOnce(this.map, 'mousedown', (e) => {\n      event.preventDefault(); // eslint-disable-line no-restricted-globals\n      event.stopPropagation(); // eslint-disable-line no-restricted-globals\n\n      if (!this.initialDrawPoint) {\n        this.#setInitialDrawPoint(e.latLng);\n      }\n\n      this.drawnPolylineDraft.getPath().push(e.latLng);\n\n      google.maps.event.addListener(this.map, 'mousemove', (e) => {\n        this.drawnPolylineDraft.getPath().push(e.latLng);\n      });\n\n      google.maps.event.addListenerOnce(this.map, 'mouseup', () => {\n        this.#drawFreeHandComplete();\n      });\n    });\n  };\n\n  #drawFreeHandComplete = () => {\n    this.#clearDrawFreeHandListeners();\n\n    this.startedDrawingFreeHand = false;\n\n    MapFunctions.freezeMap(this.map, false);\n\n    if (this.initialDrawPoint) this.initialDrawPoint.remove();\n    this.initialDrawPoint = null;\n\n    this.drawnPolylineDraft.setMap(null);\n\n    const polygons = JstsHelper.processPolygon(\n      this.drawnPolylineDraft.getPath().getArray(),\n      MapFunctions.getZoom(this.map)\n    );\n\n    if (polygons.length > 0) {\n      this.drawnShape = [];\n\n      let shape = [];\n\n      polygons.forEach((p) => {\n        this.drawnShape.push(\n          new google.maps.Polygon({ path: p, ...this.polygonOptions })\n        );\n\n        shape = shape.concat(\n          p.map((item) => {\n            return { lat: item.lat(), lng: item.lng() };\n          })\n        );\n      });\n\n      this.#setDeleteDrawPoint();\n\n      this.callback(shape);\n\n      this.onPlotCallback(shape);\n    } else {\n      this.#initDrawFreeHand();\n    }\n  };\n\n  #clearDrawFreeHandListeners = () => {\n    google.maps.event.clearListeners(this.map, 'mousedown');\n    google.maps.event.clearListeners(this.map, 'mousemove');\n    google.maps.event.clearListeners(this.map, 'mouseup');\n  };\n}\n"],"names":["CustomOverlayView","content","position","callback","onAdd","div","document","createElement","style","cssText","innerHTML","google","maps","event","addDomListener","getPanes","floatPane","appendChild","onRemove","clearInstanceListeners","parentNode","removeChild","close","setMap","draw","projection","getProjection","point","fromLatLngToDivPixel","top","y","left","x","show","map","remove","extend","type1","type2","property","prototype","OverlayView","MapFunctions","getZoom","getBounds","bounds","ne","getNorthEast","sw","getSouthWest","nw","lat","lng","se","pointToLatLng","clientRect","getDiv","getBoundingClientRect","clientX","clientY","topRight","fromLatLngToPoint","bottomLeft","zoom","scale","Math","pow","fromPointToLatLng","Point","freezeMap","freeze","setOptions","draggable","scrollwheel","draggableCursor","disableDoubleClickZoom","enableCrossair","enable","JstsHelper","processShape","shape","validate","polygons","length","shapePolygons","polygon","firstCoordinate","i","push","jsts","Coordinate","LatLng","geometryFactory","GeometryFactory","jstsPolygons","item","shell","createLinearRing","createPolygon","jstsPolygon","createMultiPolygon","validPolygon","getCoordinates","processPolygon","path","simplifyZoom","coordinates","tolerance","TopologyPreservingSimplifier","simplify","geom","normalize","Polygon","MultiPolygon","n","getNumGeometries","getGeometryN","lastCoordinate","isValid","polygonizer","polygonize","Polygonizer","getPolygons","getExteriorRing","getNumInteriorRing","getInteriorRingN","lineString","LinearRing","getFactory","createLineString","getCoordinateSequence","createPoint","getCoordinateN","toAdd","union","add","size","iterator","next","iter","ret","hasNext","symDifference","MapDrawShapeManager","drawingMode","drawFreeHandMode","polygonOptions","initialPointInnerHtml","deletePointInnerHtml","onPlotCallback","initDrawnShape","initialShape","drawnShape","forEach","p","resetDrawnShape","deleteDrawnShape","setDrawFreeHandMode","enabled","startedDrawing","startedDrawingFreeHand","setDrawingMode","initialDrawPoint","drawnPolylineDraft","drawnPolygonDraft","highestPoint","maxLat","getPath","getArray","Polyline","strokeOpacity","e","latLng","polylinePath","removeAt","setPath","setAt","addListenerOnce","setTimeout","concat","clearListeners","preventDefault","stopPropagation","addListener"],"mappings":"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"}